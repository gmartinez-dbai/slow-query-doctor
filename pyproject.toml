[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "slow-query-doctor"
version = "0.1.2"
description = "AI-powered PostgreSQL performance analyzer that diagnoses slow queries and provides actionable optimization recommendations"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Giovanni Martinez", email = "gio@gmartinez.net"},
]
maintainers = [
    {name = "Giovanni Martinez", email = "gio@gmartinez.net"},
]
keywords = [
    "postgresql",
    "database",
    "performance",
    "optimization",
    "sql",
    "ai",
    "openai",
    "slow-queries",
    "analyzer",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: SQL",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.0.0",
    "openai>=1.0.0",
    "python-dotenv>=0.19.0",
    "pyyaml>=6.0.0",
    "tqdm>=4.0.0",
    "psycopg>=3.1.18",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-mermaid2-plugin>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/gmartinez-dbai/slow-query-doctor"
Repository = "https://github.com/gmartinez-dbai/slow-query-doctor"
Issues = "https://github.com/gmartinez-dbai/slow-query-doctor/issues"
Changelog = "https://github.com/gmartinez-dbai/slow-query-doctor/releases"

[project.scripts]
slow-query-doctor = "slowquerydoctor.__main__:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["slowquerydoctor*"]
exclude = ["tests*", "docs*", "sample_logs*"]

[tool.setuptools.package-data]
slowquerydoctor = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["slowquerydoctor"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["openai.*", "dotenv.*"]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=slowquerydoctor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["slowquerydoctor"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

# Flake8 configuration (via setup.cfg since flake8 doesn't support pyproject.toml yet)
# You'll need to create a setup.cfg file for flake8 config